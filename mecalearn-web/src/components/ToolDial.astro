---

---

<script is:inline src="https://www.geogebra.org/apps/deployggb.js"></script>

<div data-dial-init class="fixed top-6 end-6 group" style="margin-top: 75px;">
  <button
    id="closeDial"
    type="button"
    data-dial-toggle="speed-dial-menu-top-right"
    aria-controls="speed-dial-menu-top-right"
    aria-expanded="false"
    class="flex items-center justify-center text-white bg-blue-700 rounded-full w-14 h-14 hover:bg-blue-800 dark:bg-blue-600 dark:hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 focus:outline-none dark:focus:ring-blue-800"
  >
    <svg
      class="w-5 h-5 transition-transform group-hover:rotate-45"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 18 18"
    >
      <path
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M9 1v16M1 9h16"></path>
    </svg>
    <span class="sr-only">Abrir men√∫</span>
  </button>
  <div
    id="speed-dial-menu-top-right"
    class="flex flex-col items-center hidden mt-4 space-y-2"
  >
    <button
      id="graphingButton"
      type="button"
      data-tooltip-target="tooltip-print"
      data-tooltip-placement="left"
      class="flex justify-center items-center w-[52px] h-[52px] text-gray-500 hover:text-gray-900 bg-white rounded-full border border-gray-200 dark:border-gray-600 shadow-sm dark:hover:text-white dark:text-gray-400 hover:bg-gray-50 dark:bg-gray-700 dark:hover:bg-gray-600 focus:ring-4 focus:ring-gray-300 focus:outline-none dark:focus:ring-gray-400"
    >
      <a href="https://www.geogebra.org/calculator" target="_blank">
        <svg
          class="w-5 h-5"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path d="M5 20h10a1 1 0 0 0 1-1v-5H4v5a1 1 0 0 0 1 1Z"></path>
          <path
            d="M18 7H2a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2v-3a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v3a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2Zm-1-2V2a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3h14Z"
          ></path>
        </svg>
      </a>
      <span class="sr-only">GeoGebra</span>
    </button>
    <div
      id="tooltip-print"
      role="tooltip"
      class="absolute z-10 invisible inline-block w-auto px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700"
    >
      GeoGebra
      <div class="tooltip-arrow" data-popper-arrow></div>
    </div>

    <button
      id="geometryButton"
      type="button"
      class="flex justify-center items-center w-[52px] h-[52px] text-gray-500 hover:text-gray-900 bg-white rounded-full border border-gray-200 dark:border-gray-600 shadow-sm dark:hover:text-white dark:text-gray-400 hover:bg-gray-50 dark:bg-gray-700 dark:hover:bg-gray-600 focus:ring-4 focus:ring-gray-300 focus:outline-none dark:focus:ring-gray-400"
    >
      Geometry
    </button>

    <button
      id="casButton"
      type="button"
      class="flex justify-center items-center w-[52px] h-[52px] text-gray-500 hover:text-gray-900 bg-white rounded-full border border-gray-200 dark:border-gray-600 shadow-sm dark:hover:text-white dark:text-gray-400 hover:bg-gray-50 dark:bg-gray-700 dark:hover:bg-gray-600 focus:ring-4 focus:ring-gray-300 focus:outline-none dark:focus:ring-gray-400"
    >
      CAS
    </button>

    <button
      id="3dButton"
      type="button"
      class="flex justify-center items-center w-[52px] h-[52px] text-gray-500 hover:text-gray-900 bg-white rounded-full border border-gray-200 dark:border-gray-600 shadow-sm dark:hover:text-white dark:text-gray-400 hover:bg-gray-50 dark:bg-gray-700 dark:hover:bg-gray-600 focus:ring-4 focus:ring-gray-300 focus:outline-none dark:focus:ring-gray-400"
    >
      3D
    </button>

    <button
      id="scientificButton"
      type="button"
      class="flex justify-center items-center w-[52px] h-[52px] text-gray-500 hover:text-gray-900 bg-white rounded-full border border-gray-200 dark:border-gray-600 shadow-sm dark:hover:text-white dark:text-gray-400 hover:bg-gray-50 dark:bg-gray-700 dark:hover:bg-gray-600 focus:ring-4 focus:ring-gray-300 focus:outline-none dark:focus:ring-gray-400"
    >
      Scientific
    </button>
  </div>
</div>
<div id="draggableGGB">
  <div id="draggableGGBHeader">GeoGebra (BETA)</div>
  <div id="ggb-element"></div>
</div>

<script>
  declare const GGBApplet: any;

  function getAppNameById(buttonId: any) {
    switch (buttonId) {
      case "graphingButton":
        return "graphing";
      case "geometryButton":
        return "geometry";
      case "casButton":
        return "cas";
      case "3dButton":
        return "3d";
      case "scientificButton":
        return "scientific";
      default:
        return "graphing"; // default appName
    }
  }

  document.querySelectorAll("button").forEach((button) => {
    if (!button.getAttribute("role")) {
      button.addEventListener("click", function () {
        const appName = getAppNameById(button.id);
        const params = {
          appName: appName,
          width: 800,
          height: 600,
          showToolBar: true,
          showAlgebraInput: true,
          showMenuBar: true,
        };
        const applet = new GGBApplet(params, true);
        document.getElementById("draggableGGB").style.display = "block";
        applet.inject("ggb-element");
      });
    }
  });

  dragElement(document.getElementById("draggableGGB"));

  function dragElement(element: any) {
    var pos1 = 0,
      pos2 = 0,
      pos3 = 0,
      pos4 = 0;
    if (document.getElementById(element.id + "Header")) {
      // if present, the header is where you move the DIV from:
      document.getElementById(element.id + "Header").onmousedown =
        dragMouseDown;
    } else {
      element.onmousedown = dragMouseDown;
    }

    function dragMouseDown(e: any) {
      e = e || window.event;
      e.preventDefault();

      pos3 = e.clientX;
      pos4 = e.clientY;
      document.onmouseup = closeDragElement;

      document.onmousemove = elementDrag;
    }

    function elementDrag(e: any) {
      e = e || window.event;
      e.preventDefault();

      pos1 = pos3 - e.clientX;
      pos2 = pos4 - e.clientY;
      pos3 = e.clientX;
      pos4 = e.clientY;

      element.style.top = element.offsetTop - pos2 + "px";
      element.style.left = element.offsetLeft - pos1 + "px";
    }

    function closeDragElement() {
      document.onmouseup = null;
      document.onmousemove = null;
    }
  }

  document.getElementById("closeDial").addEventListener("click", function () {
    document.getElementById("draggableGGB").style.display = "none";
  });
</script>

<style>
  #draggableGGB {
    display: none;
    position: absolute;
    z-index: 9;
    background-color: #f1f1f1;
    border: 1px solid #d3d3d3;
    text-align: center;
  }

  #draggableGGBHeader {
    padding: 10px;
    cursor: move;
    z-index: 10;
    background-color: #1f2937;
    color: #fff;
  }
</style>
